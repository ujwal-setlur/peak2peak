---
import LikeIcon from '../assets/like-primary.svg';
import CommentIcon from '../assets/comment-primary.svg';

import { getInitials } from '../utils';

const { postId, data } = Astro.props;
---

<!-- Modal Container -->
<div
  class="invisible fixed inset-0 z-40 flex items-center justify-center px-3 pb-[50px] pt-[100px] opacity-0 transition-opacity duration-300 md:px-5"
  id={`modal-${postId}`}
>
  <!-- Background Overlay -->
  <div class="absolute inset-0 bg-black opacity-50" data-post-id={postId}></div>

  <!-- Modal Content -->
  <div
    class="overscroll-y-hidden relative z-10 h-full max-h-[80vh] w-full max-w-screen-2xl overflow-x-hidden border-[1px] border-primary bg-white p-3 shadow-lg md:p-5 md:pr-0"
  >
    <!-- <div
    class="relative z-10 h-full w-full max-w-screen-2xl overflow-x-hidden overscroll-y-auto border-[1px] border-primary bg-white p-3 shadow-lg md:p-5"
  > -->
    <!-- Modal Body -->
    <div class="flex h-full w-full gap-2">
      <!-- <div class="flex w-full max-w-[60%] flex-col"> -->
      <div class="relative flex aspect-square w-full max-w-[60%]">
        <img
          src={data.image.url}
          alt="post"
          class="aspect-square w-full overflow-hidden object-cover"
        />

        <!-- Close Button -->
        <button
          class="group absolute left-0 top-0 flex h-16 w-16 items-center justify-center overflow-hidden bg-primary text-gray-400 hover:text-gray-900 dark:hover:text-white"
          data-modal-close
          data-post-id={postId}
        >
          <svg class="h-15 w-15" fill="#ffffff" stroke="#ffffff" viewBox="0 0 24 24">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="1"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <!-- </div> -->

      <div class="w-full max-w-[40%] space-y-4 overflow-y-auto">
        <div class="flex w-full flex-col gap-3 bg-white bg-opacity-5 px-5 pb-5">
          <!-- Title Section -->
          <div class="w-full text-lg font-semibold leading-tight text-primary">
            {data?.title || ''}
          </div>

          <!-- Date and Category Section -->
          <div class="w-full text-base font-thin text-black">
            {`${data?.date || ''} | ${data?.category || ''}`}
          </div>

          <!-- Likes and Comments Count Section -->
          <div class="flex items-center gap-5">
            <div class="flex items-center gap-4">
              <button
                class="text-teal-600 hover:text-teal-800"
                data-action="like"
                data-post-id={postId}
              >
                <img src={LikeIcon.src} alt="like" class="h-8 w-8 fill-primary" />
              </button>
              <span class="text-md font-medium text-black" id={`likes-${postId}`}>
                {data?.likesCount || 0}
              </span>
            </div>
            <div class="text-md font-thin text-black">|</div>
            <div class="flex items-center gap-4">
              <button
                class="text-teal-600 hover:text-teal-800"
                data-action="like"
                data-post-id={postId}
              >
                <img src={CommentIcon.src} alt="comment" class="h-8 w-8 fill-primary" />
              </button>
              <span class="text-md font-medium text-black" id={`comments-count-${postId}`}>
                {data?.commentsCount || 0}
              </span>
            </div>
          </div>

          <!-- Description Section -->
          <div class="w-full text-sm font-thin text-black">
            {data?.description || ''}
          </div>

          <!-- Comments Section -->
          <div class="mt-5 w-full">
            <h3 class="text-sm font-semibold text-black">Comments</h3>

            <!-- Add Comment Form Section -->
            <form class="flex flex-col gap-3" data-comment-form data-post-id={postId}>
              <div class="mt-3 flex flex-col gap-2">
                <textarea
                  name="comment"
                  placeholder="Write your comments..."
                  class="w-full border px-3 py-2 text-xs italic focus:outline-none focus:ring-2 focus:ring-primary"
                ></textarea>
                <input
                  type="text"
                  name="name"
                  placeholder="Your name"
                  class="w-full border px-3 py-2 text-xs italic focus:outline-none focus:ring-2 focus:ring-primary"
                />
                <input
                  type="text"
                  name="email"
                  placeholder="Email"
                  class="w-full border px-3 py-2 text-xs italic focus:outline-none focus:ring-2 focus:ring-primary"
                />
              </div>
              <button
                type="button"
                class="w-[150px] self-start bg-gradient-to-r from-teal-500 to-teal-800 px-1 py-1.5 text-xs tracking-wider text-white hover:from-teal-800 hover:to-teal-500 hover:font-medium"
              >
                SUBMIT
              </button>
            </form>

            <!-- Comment List Section -->
            <ul class="mt-8 max-h-[500px] space-y-3 overflow-y-auto" id={`comments-${postId}`}>
              {
                data?.comments?.length
                  ? data?.comments.map((comment: any, index: number) => {
                      const isLastComment = index === data.comments.length - 1;
                      return (
                        <li class={`flex gap-3 ${!isLastComment ? 'border-b-[1px] pb-3' : ''}`}>
                          <div class="flex h-[50px] w-[50px] shrink-0 items-center justify-center rounded-full bg-primary text-sm font-medium text-white">
                            {comment.user ? getInitials(comment.user) : ''}
                          </div>
                          <div class="flex flex-col">
                            <span class="text-xs font-medium text-black">{comment.user}</span>
                            <span class="text-xs font-thin text-black">{comment.text}</span>
                          </div>
                        </li>
                      );
                    })
                  : null
              }
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Client-Side Script -->
<script is:inline>
  // Handle modal close
  document.addEventListener('click', (e) => {
    const closeElement = e.target.closest('[data-modal-close]');
    if (closeElement) {
      const postId = closeElement.dataset.postId;
      const modal = document.getElementById(`modal-${postId}`);
      if (modal) {
        modal.classList.remove('opacity-100', 'visible');
        modal.classList.add('opacity-0', 'invisible');
        // Allow background scrolling
        document.body.classList.remove('modal-open');

        // Restore scroll position
        document.body.style.position = '';
        document.body.style.top = '';
        window.scrollTo(0, scrollY);
      }
    }
  });
</script>
